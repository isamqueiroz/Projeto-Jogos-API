// <auto-generated />
using System;
using Jogos_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jogos_API.Migrations
{
    [DbContext(typeof(JogosDbContext))]
    [Migration("20250403144957_DbJogos")]
    partial class DbJogos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Jogos_API.Domains.Jogo", b =>
                {
                    b.Property<Guid>("JogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("JogoId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("Jogos_API.Domains.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeDoJogo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Plataforma")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("JogoId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Jogos_API.Domains.Usuario", b =>
                {
                    b.HasOne("Jogos_API.Domains.Jogo", "jogo")
                        .WithMany()
                        .HasForeignKey("JogoId");

                    b.Navigation("jogo");
                });
#pragma warning restore 612, 618
        }
    }
}
